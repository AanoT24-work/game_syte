// Функция для автоматического скрытия алертов (всплывающих сообщений)
function initAutoHideAlerts() {
    // Находим ВСЕ элементы на странице с классом 'auto-hide-alert'
    // querySelectorAll возвращает NodeList (похожий на массив) всех найденных элементов
    const alerts = document.querySelectorAll('.auto-hide-alert');
    
    // Проходим по КАЖДОМУ найденному алерту с помощью forEach
    // forEach выполняет функцию для каждого элемента в коллекции
    alerts.forEach(alert => {
        // Создаем таймер, который автоматически скроет алерт через 5000 миллисекунд (5 секунд)
        // setTimeout возвращает ID таймера, который мы сохраняем в переменной autoHideTimeout
        // Этот ID понадобится нам позже для отмены таймера
        const autoHideTimeout = setTimeout(() => {
            // Эта функция выполнится через 5 секунд
            hideAlert(alert); // Вызываем функцию скрытия для текущего алерта
        }, 5000); // 5000 мс = 5 секунд
        
        // Ищем кнопку закрытия ВНУТРИ текущего алерта
        // querySelector ищет только внутри элемента alert (не по всей странице)
        const closeButton = alert.querySelector('.close-button');
        
        // Проверяем, была ли найдена кнопка закрытия
        // if (closeButton) означает: "если closeButton не равен null или undefined"
        if (closeButton) {
            // Добавляем обработчик события 'click' на кнопку закрытия
            // Когда пользователь кликает на кнопку, выполнится функция:
            closeButton.addEventListener('click', () => {
                // ОТМЕНЯЕМ ранее установленный таймер автоматического скрытия
                // clearTimeout останавливает таймер, чтобы алерт не исчез автоматически
                // после того как пользователь сам решил его закрыть
                clearTimeout(autoHideTimeout);
                
                // Немедленно скрываем алерт, так как пользователь сам нажал закрыть
                hideAlert(alert);
            });
        }
        // Если кнопка закрытия не найдена, алерт будет закрыт только автоматически через 5 секунд
    });
}

// Функция для плавного скрытия и удаления алерта
function hideAlert(alert) {
    // Устанавливаем непрозрачность алерта в 0 (полностью прозрачный)
    // Это делает элемент невидимым, но он еще остается в DOM
    alert.style.opacity = '0';
    
    // Добавляем CSS transition для плавного изменения opacity
    // 'opacity 0.5s ease' означает:
    // - свойство: opacity (непрозрачность)
    // - длительность: 0.5 секунды
    // - функция плавности: ease (ускорение в начале и замедление в конце)
    alert.style.transition = 'opacity 0.5s ease';
    
    // Создаем второй таймер, который полностью УДАЛИТ алерт из DOM после завершения анимации
    setTimeout(() => {
        // Проверяем, что алерт все еще существует в DOM (на случай если его уже удалили)
        // parentNode возвращает родительский элемент, если он есть - значит элемент в DOM
        if (alert.parentNode) {
            // Удаляем алерт из DOM (Document Object Model)
            // После этого элемента физически не будет на странице
            alert.remove();
        }
    }, 500); // Ждем 500 мс (0.5 секунды) - время завершения CSS анимации
}

// Инициализация при загрузке DOM
// DOMContentLoaded - событие, которое срабатывает когда HTML документ полностью загружен и parsed
// НЕ ждет загрузки изображений, стилей и т.д., только структуру DOM
document.addEventListener('DOMContentLoaded', initAutoHideAlerts);
// Когда страница загрузится, выполнится функция initAutoHideAlerts